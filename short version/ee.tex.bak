\documentclass[11pt, a4paper]{report}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{graphicx}
\usepackage{mathtools}
\usepackage[hidelinks]{hyperref}  % most people dont know of this :3
\usepackage[dvipsnames]{xcolor}
\usepackage{systeme}
\usepackage{subcaption}

\usepackage[backend=bibtex,style=verbose-ibid]{biblatex}
\addbibresource{../citations.bib}

\usepackage{listings}
\usepackage{color}
\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}

\lstset{frame=tb,
  language=Python,
  aboveskip=3mm,
  belowskip=3mm,
  showstringspaces=false,
  columns=flexible,
  basicstyle={\small\ttfamily},
  numbers=none,
  numberstyle=\tiny\color{gray},
  keywordstyle=\color{blue},
  commentstyle=\color{dkgreen},
  stringstyle=\color{mauve},
  breaklines=true,
  breakatwhitespace=true,
  tabsize=3
}


\newcommand{\inv}{^{\raisebox{.2em}{$\scriptscriptstyle-1$}}}
\newcommand{\qed}{\hfill $\blacksquare$}

\newcommand{\integers}{\mathbb{Z}}
\newcommand{\rationals}{\mathbb{Q}}
\newcommand{\reals}{\mathbb{R}}
\newcommand{\complexes}{\mathbb{C}}
\newcommand{\field}{\mathbb{F}}

% this makes 'sections' the counted heading, not 'chapters'
\renewcommand{\thesection}{\arabic{section}}

\providecommand{\main}{..} 
\graphicspath{{\main/images/}{images/}}

%\author{Jacob Bruner}
\title{IB Extended Essay}
\date{\today}

\begin{document}
\begin{titlepage}
\begin{flushleft}
%Dwight School\\
%New York, New York
\end{flushleft}

\vspace*{3cm}
\begin{center}
\LARGE Group Theory and Modern Cryptography\\
\vspace*{.5cm}
\large To what extent does group theory provide a mathematical backdrop for modern cryptography? \\
%\vspace*{.5cm}
%\large 340923 words \\
\vspace*{.5cm}
\Large Group 5: Mathematics \\
\vspace*{.5cm}
\large 4000 words excluding typeset expressions
\end{center}

\vfill

\begin{flushright}
\begin{tabular}{l@{:\hspace*{\tabcolsep}}l}
%Author & Jacob Bruner \\
%Advisor & Daniel Bjelis
\end{tabular}
\end{flushright}

\end{titlepage}
\tableofcontents

\pagebreak

\iffalse
############
heres an example of a code block
\begin{lstlisting}
        def intervalValues(z, n):
            return output # return the sequence of values
\end{lstlisting}

heres an example of an image
\begin{figure}[h]
\begin{center}
\includegraphics[scale=.37]{../onefifteen} 
\caption{Sequences Generated by n = 1-15 on Argand Diagram}
\end{center}
\end{figure}
############
\fi


\section{Foreword}

This paper is for research purposes only. Although the information presented is as accurate as possible, one should never implement a cryptographic system themselves unless they know what they're doing. \textbf{I am not liable for damages caused in testing any cryptographic concepts referenced in this paper.} Cryptography's greatest weakness is human-error, and virtually \textit{all} breaks in cryptographic security result from poor implementation.\autocite{thimbleby}

\section{Introduction and Aim}
\subsection{Topic and Research Question}

For my Extended Essay, I will be exploring the relationship between Group Theory, a mathematical field generalizing symmetry and codifying properties of number systems, and modern cryptography. Cryptography has seen a number of advancements in the computer-age, most notable of which is the use of 'elliptic curves.' In this paper, I intend to show how a group-theoretical perspective on cryptography helps understand elliptic curve cryptosystems. My guiding question is: \textit{to what extent does group theory provide a mathematical backdrop for modern cryptography?}

\subsection{Motivating Idea}
It's undeniable that our modern-day world is reliant on cryptography. Every time a phone sends a text, a browser connects to a server, an email gets sent off, or a monetary transaction is made, our devices are performing many hundreds of math operations to ensure our data are 'encrypted.' But what does 'encryption' mean?

‘Encryption’ is the process of disguising a message to be, loosely speaking, hidden to all \textit{except} the intended recipient. This is the process of converting a ‘plaintext’ message into a jumbled ‘ciphertext.' Converting a plaintext message (a string/array of characters) into a ciphertext is known as an ‘enciphering’ or ‘encrypting’ transformation. Likewise the reverse operation of recovering the plaintext message from a ciphertext is known as the \textit{deciphering transformation.}\autocite[54]{koblitz} If we denote the plain and ciphertext $\mathcal{P}$ and $\mathcal{C}$ respectively, the enciphering map $f$ and its inverse $f\inv$ we obtain the following diagram:

$$ \mathcal{P} \overset{f}\longrightarrow \mathcal{C} \overset{f\inv}\longrightarrow \mathcal{P} $$

\subsection{The Fundamentals of Symmetric Cryptography}

The intuitive implementation has the two transacting parties agree upon the nature of the map $f$ in secret, beforehand. This type of system has a special name, \textit{"Symmetric Key Cryptography"}, reflecting that both parties have the same common secret. Historical examples include the 'Caesar cipher,' where $f$ is a shift operation that maps each letter a number of places ahead. For instance, the parties might decide beforehand the map $f$: \textit{shift each character forward 3 letters}, implying the inverse map $f\inv$: \textit{shift each character back 3 letters}. This might look like so: \footnote{Ceaser Ciphers are just linear transformations in disguise. We could consider groups of two letters, \textit{digraphs}, resulting in $f$ being matrix-vector multiplication with a 2x2 invertible matrix. Similarly, we could consider invertible \textit{affine} transformations of the form $f:\vec{x} \to A\vec{x} + \vec{b}$, where A encodes a scaling factor.}

\begin{align*}
 \mathcal{P} &\sim A,B,C,D,E,F,...Y,Z  \\ 
 \mathcal{C} &\sim D,E,F,G,H,I,...B,C 
\end{align*} % I'm not sure what symbol to use here...Equivalance relation? Monomorphism?
For example, if one wanted to encrypt the message $\mathcal{P} =$ "HELLO", the ciphertext would be $\mathcal{C} =$ "KHOOR" which they could send off to their friend to decode with the inverse, subtract-three-letters map. Note that, even in this simple example, repeated letters, word length, and other syntactic information provide a wealth of information about the nature of the plaintext, making it vulnerable to cryptanalysis techniques.\autocite[56]{koblitz} 

Mathematically, a Caesar cipher starts with encoding each letter as a number from $0$–A, to $25$–Z, depending on the alphabet of choice. We represent this map, shifting $n$ places forward, with addition. Importantly, this operation must 'wrap around' back to zero when it exceeds 'z' in the alphabet. This process, formally known as \textit{'modular arithmetic'}, is like circling a clock, where after reaching 25 we wrap back to 0. So, in our case, shifting 'z' by 3 letters looks like so: $25 + 3 \equiv 2 \bmod 26$, which reads "25 plus 3 \textit{is congruent to} 2, \textit{modulo} 26." 'Congruent' here represents the fact that $2$ and $28$ are indistinguishable, or \textit{congruent}. Indeed this is the case for $2 \equiv 26n+2 \bmod 26$ With this in mind, we obtain for each letter $p \in \mathcal{P}$:  

\[
f(p) = p + n \bmod 26 
\]



% I could maybe talk about affine cryptosystems here if I need more words.
% I could also show the linear algebra point of view

This isn't a very sophisticated cryptographic scheme... For instance, comparing the most commonly occurring letters in the ciphertext to those of the English alphabet (frequency analysis) could easily break these, broadly classified as 'substitution ciphers.'\autocite[54]{koblitz} 
Modern protocols are more resistant; changing one letter of plaintext yields a completely different ciphertext, making them resistant to this technique.   
  
 In general, Symmetric-key cryptography (\textit{viz.} predetermined, shared secret) is well understood. For instance, Claude Shannon proved that the \textit{'one-time-pad'} encryption technique was mathematically unbreakable. 
In full generality, he showed that if a random-generated key is at least as long as the plaintext (specifying a random\footnote{There is a paramount distinction between \textit{random} and \textit{pseudorandom}. \textit{True} randomness has to be derived from a non-computer source (for the most part). Commonly approximates include the least-significant-digit of a mouse position, the frequency of keypresses, etc.\\\autocite[92]{koblitz}} character for each plaintext character in the same alphabet), then performing a caesar cypher shift on each \textit{individual} plaintext character by the value of the random character, yields a cryptosystem that is \textit{mathematically} impenetrable. 
Or equivalently, performing a random modular addition on each character of the plaintext, with the shared secret being the sequence of random shifts.\autocite{claude} Essentially, it's just randomly scrambling the characters, but keeping track of the steps as the shared secret. % I maybe should rephrase this in terms of performing a random Caesar cipher shift per character if this description is too confusing.
Although modern systems seek smaller key sizes for long messages, this worst-case scenario demonstrates the strength of symmetric-key algorithms in general. The 'one-time-pad' gets its name from WWII, when the KGB would distribute palm-sized pads with one-time-keys and a table to ease in conversion. Such pads were often made of flammable materials to be burned with no trace.\autocite{lewand} 
  
\begin{figure}[h]
\begin{center}
\includegraphics[scale=.29]{diana} 
\caption{Format of a one-time-pad used by the NSA\autocite{diana}}
\end{center}
\end{figure}


\section{What is 'Public-Key' Cryptography}

\subsection{The 'Public-Key' Paradox}

In the modern world, it's impractical to require that every shared secret be determined ahead of time. If a user wants to connect to a server over a secure connection, how could symmetric-key encryption be employed?—there's no way to share in secret beforehand.
Beyond symmetric encryption, if two parties want to transact over an eavesdropped channel, is there any way they could do so in an encrypted matter? The intuitive answer might be no; how can a shared secret be 'shared' without any man-in-the-middle being able to obtain that same key. But this defys the ubiquity of encryption on the internet that we rely on daily. How could this be?

%"In applied contexts, the terms "easy" and "hard" are usually interpreted relative to some specific computing entity; typically "cheap enough for the legitimate users" and "prohibitively expensive for any malicious agents"."

\subsection{One-way Operations}

It's intuitive that some operations or computations are more difficult to do forwards than in reverse—certain 'one-way functions.' If I mixed two different-colored paints together and asked whether you, \textit{a priori}, could deduce the two initial colors given the end result, could you? Although it's quite easy to check whether any two colors combine to match the end result (by mixing them), there isn't an \textit{easy} way to separate the initial colors. This happens to be true in mathematical contexts. 

The canonical 'one-way operation,' employed to this day, is that of multiplying large numbers with minimal divisors. This should make sense; breaking up a large number into factors usually requires computationally expensive trial divisions, especially when its factors are large. To use a jargon, its \textit{asymptotic time-complexity is exponential}, meaning that the time to reach an answer scales exponentially with the size of the number. Algorithms like the general-number-field-sieve quicken this slightly,\autocite[1482]{pomerance} but regardless it is vastly faster to compute multiplication, the time complexity of which scales \textit{at worst} with the square of the number.\autocite{bunimov}

\subsection{Diffie-Hellman Key Exchange}

The Diffie-Hellman protocol was the first "asymmetric" protocol,\footnote{Precisely, it's a non-authenticated key exchange, but DH can be easily modified to send arbitrary messages in a scheme known as 'Elgamal encryption,' which is true "public-key" cryptography.\\\autocite{elgamal}} using the above 'multiplication' intuition as a starting point. The end result of the key exchange is a commonly shared number, which can then function as the key for parties to establish symmetric encryption.

Between two parties, Alice $A$ and Bob $B$, the protocol first agrees on a common 'generator' integer $g$, which can be done over an eavesdropped channel. Each party chooses another \textit{secret} integer in private: their private key. Say, Alice chooses $a$ and Bob chooses $b$. Then, each party exponentiates the generator by their private key. So Alice and Bob compute $g^a$ and $g^b$ respectively. Each then sends this result to the other over the insecure channel. Finally, they both exponentiate the received numbers by their private key. For example, Alice would receive $g^b$ over the network, then compute$(g^b)^a$.
By the commutativity of integer multiplication, multiplying $g$ by itself $b$ times \textit{then} $a$ times is the same as  multiplying $g$ by itself $a$ times \textit{then} $b$ times. Explicitly, with Alice and Bob's private-keys in \color{orange}{amber} \color{black}{and} \color{blue}{blue} \color{black}{respectively:}
\[ (g^{\color{orange}{a}}\color{black}{)}^{\color{blue}{b}} = g^{\color{orange}{a}\color{blue}{b}} = (g^{\color{blue}{b}}\color{black}{)}^{\color{orange}{a}}  \]

\begin{figure}[ht]
\begin{center}
\includegraphics[width = .4\linewidth]{colors} 
\caption{Diffie-Hellman protocol depicted visually, with mixing and separating paint replacing multiplication and factorization. (public domain)}
\end{center}
\end{figure}

The one caveat to the above description, however, is that these multiplications are performed \textit{modulo} $n$ for some integer $n$. As discussed before, this means numbers wrap around 'like a clock'; if $g^a$ exceeds $n$, the remainder of $g^a \div n$ is returned. This should make sense, because computers have limited memory and because exponentiation by a (large) number yields an incomprehensibly large result—too large to send over a network or perform computation with. Additionally, computers can perform modular exponentiation \textit{very} performantly by leveraging tricks in binary.\autocite{bunimov}

Our relation from before looks like:
% I need to rewrite this with \bmod
\[ (g^{\color{orange}{a}}\color{black}{\:\mathrm{mod}\; p)}^{\color{blue}{b}}\color{black}{\:\mathrm{mod}\; p\; =\; }g^{\color{orange}{a}\color{blue}{b}} \:\mathrm{mod}\; p = (g^{\color{blue}{b}}\color{black}{\:\mathrm{mod}\; p)}^{\color{orange}{a}} \color{black}{\:\mathrm{mod}\; p.}  \]
Importantly, though, Alice and Bob both agree on a common result: $g^{ab}\;\mathrm{mod}\;p$, which an eavesdropper cannot compute without knowing $a$ and $b$, which are not shared.

In the real world, this type of Diffie-Hellman transaction is used by countless devices every second to allow secure connections over the internet. Browsers have a predetermined set of generators from NIST which they use to make negotiating the parameters easier.\autocite{barker} Every time you are to connect to a \texttt{https://}... website the client (you) and the server are performing this type of key exchange. Although, modern implementations might use a different 'number system' to perform the repeated multiplications....
% wow i didn't know \bmod was a thing.... :P

\subsection{A Proof that: $(a \bmod p)^k \bmod p = a^k \bmod p$}

Here I offer a short proof verifying the ideas above.
Given the linearity of modularity over multiplication:
$$a \times b \bmod n = (a \bmod n) \times (b \bmod n) \bmod n$$
I will show that $(a \bmod p)^k \bmod p = a^k \bmod p$ with induction.
\vspace*{0.4cm}

\textbf{Basis} case, $P(1)$ or $k=1$, holds since,

\[ a^1 \bmod p = (a \bmod p)^1 \bmod p \tag{basis}  \]

\textbf{Assume} $P(k)$ holds for all $k$ like so:

\[ a^k \bmod p = (a \bmod p)^k \bmod p \tag{P(k)} \]

Now, multiplying $ \bmod p$ both sides by $(a \bmod p)$ and applying the given:
\begin{align*}
\left(  a^k \bmod p \times a \bmod p \right) \bmod p &= \left(  (a \bmod p)^k \bmod p \times a \bmod p \right) \bmod p\\
(a^k \times a) \bmod p  &= ((a \bmod p)^k (a \bmod p)) \bmod p\\
a^{k+1} \bmod p  &= (a \bmod p)^{k+1} \bmod p \tag{P(k+1)}
\end{align*}

Hence, since $P(1)$ holds and $P(k) \Rightarrow P(k+1)$, the proposition holds for all positive integers.
\qed


\section{An Introduction to Group Theory}
I will now explore how many of these concepts fit into a group-theoretical perspective and how these tools can illuminate a path to inventing stronger cryptosystems.

\subsection{The Group Axioms}

  A group is a set $G$, equipped with an operation mapping two elements to another of the form $\ast:\ G \ast G \to G$ such that the following conditions hold:\autocite[16]{saracino} \linebreak
\\\textbf{Associativity}
\\$\text{For all } a,b,c \in G,\ a\ast(b \ast c) = (a\ast b) \ast c$
\\\textbf{Identity}
\\$\text{There exists an } e \in G \text{ such that } a \ast e = e \ast a = a \ \text{ for all } a \in G$
\\\textbf{Inverse}
\\$\text{Each } x \in G \text{ has an inverse } x\inv \in G \text{ with } x \ast x\inv = x\inv \ast x = e \hspace*{.5cm}\footnote{Note that uniqueness of inverses is not given in the axioms for a group, since it follows from the Identity and Associativity requirement and the existence of a (not strictly unique) inverse. If $b, c$ are left and right inverses respectively of an element $a$ with identity $1$, then considering $c = 1 \ast c = (b \ast a) \ast c = b \ast (a \ast c) = b \ast 1 = b$, gives us $b = c$ as required.}$
\linebreak

Under this axiomatic definition of a group, a few examples might come to mind.
 
 For instance, the integers form a group under addition $(\mathbb{Z}, +)$. It's worth verifying that these do fit the definition of a group. Our identity element is 0, since $0 + a = a + 0 = a$ for all $a \in \mathbb{Z}$. Addition of integers is clearly associative. And, every number has a unique inverse, $a\inv := -a$. 
 
 Similarly, the real numbers (excluding 0) might form a group under multiplication, written $(\reals\setminus\lbrace 0 \rbrace, \times)$, $\reals^{\times}\setminus\lbrace 0 \rbrace$, or just $\reals^{\times}$. 
We verify it has a two-sided identity, $1$; that its operation is associative; and that every element has an inverse $a\inv := \frac{1}{a}$, since $a\times \frac{1}{a} = \frac{1}{a} \times a = 1, \ \forall  a \in  \reals^{\times}$. 
 
 To help intuition, consider that the integers under multiplication\textit{do not} form a group under multiplication, since inverses are not suitably defined, i.e., there is no integer $a$ such that $a\times 2 = 2 \times a = 1$.

\subsection{The Case for Commutativity and Abelian Groups}
One key property that left out of the group axioms is \textit{commutativity}, despite that many of the introductory examples \textit{do} obey commutativity. In fact, non-commutative groups abound, and the majority of groups are not commutative.\autocite{aschbacher} This distinction happens to be so important that groups obeying commutativity—$a \ast b = b \ast a$ for all $a,b \in G$—have a special name: \textit{abelian groups}.\autocite[17]{dummit} Likewise, groups without this condition are sometimes called \textit{non-abelian groups}. Non-abelian groups correspond to symmetries that change the backdrop for another symmetry to occur. For instance, the set of symmetries on a square, which forms a "dihedral" group, $\mathrm{D}_{8}$, is non-abelian. If you labeled the vertices of a square, you'd find performing a rotation and than a reflection is not, in general, the same as performing a reflection then a rotation\footnote{Working with the presentation of $\mathrm{D}_8$, $\langle a,x\ \vert \ a^4 = x^2 = e,\ xax\inv = a\inv \rangle$, one would say that $x$ and $a$ don't commute—corresponding to the reflection and rotation generators respectively.}. Despite this, many of the examples we have and will look at happen to be abelian. For instance, the additive and multiplicative (excl. $0$) groups of $\integers, \rationals, \reals$ and $\complexes$, are  'abelian.' To highlight the importance of commutativity, consider that many properties of electric charge, like quantization, as described by the Standard Model, is described by the commutativity of the circle group $U(1)$ or $\mathbb{T}$, which is the \textit{'gauge'} group of a charged particle—only taking on integer multiples of $2\pi$. \autocite{weinberg} But this is far beyond the scope of the research question.

\subsection{Applying Group Theory to Cryptography: Cyclic Groups}

  The groups that are of most importance to cryptography are abelian groups. Consider the Diffie-Hellman example before. Both parties combined a series of steps involving their generator and private keys. If the underlying multiplicative group were not abelian, $(g^a)^b$ doesn't necessarily equal $(g^b)^a$. This provokes the question, were the 'numbers' in these cases abelian groups?
 
 Yes. The group of integers under addition \textit{modulo} $n$ (as in the Caesar cipher) is denoted $(\integers / n \integers, +)$, $(\integers / n \integers)^{+}$ or just $\integers / n \integers$  and is called the 'cyclic group of order $n$.' In an earlier example, we performed operations in $\integers / 26$. The notation here is meaningful. Without straying too afar, the slash corresponds to 'quotienting' out the integers by $p$ times the integers, creating a (quotient-) group where $1$ is indistinguishable from $p+1$ and indeed $2p+1, 3p+1, ..., -p+1, -2p+1...$, called an \textit{equivalence relation}.\autocite[104]{saracino} This formalizes the imprecise notions of 'going around a clock face.'
  
  Contrastingly, performing multiplication in a modular fashion forms the group $(\integers / n \integers, \times)$ or $(\integers / n \integers)^{\times}$. It is the case that the Diffie-Hellman example earlier is working with this group, performing all the exponentiation/multiplications \textit{modulo} $n$. This group consists of the elements $\lbrace 0, 1 ...,n-1\rbrace$ that are relatively prime to $n$, i.e., share no nontrivial ($\neq 1$) divisors, which I will prove. In this multiplicative group, it takes more care to define inverses. Inverses can be computed using the Euclidean Algorithm or by leveraging the symmetries in modular multiplication.\autocite[36]{saracino} Essentially, in $(\integers / q \integers)^{\times}$, the multiplicative inverse of a number $n$ is a number $m$ such that,
\[ nm \equiv 1 \mod q\]

The counterpart in a more familar context, say $\reals^{\times}$, is that the inverse of a number $a$ is a number $\frac{1}{a}$, where $a \times \frac{1}{a} = 1$.

Now, I will prove that the elements of $(\integers / q \integers)^{\times}$ are only those relatively prime to $q$. The proof is by contradiction:

	If $\mathrm{gcd}(n,q) = d$ with $d \neq 1$ (i.e., they share a nontrivial divisor), assume there does exist some $m$ for which $nm \equiv 1 \mod q$. Expanding this out,
\begin{align*}
	nm &\equiv 1 \mod q\\
	nm - 1 &\equiv 0 \mod q\\
	\Rightarrow &\hspace*{0.3cm} q | nm-1\\
	\Rightarrow &\hspace*{0.3cm} d | nm-1 \tag{since $\mathrm{gcd}(n,q) = d$}\\
	\Rightarrow &\hspace*{0.3cm} d | nm-1 -nm \tag{since $d|nm$}\\
	\Rightarrow &\hspace*{0.3cm} d | 1
\end{align*}
As $1$ is not divisible by anything except $1$, our assumption was false and $n$ has no inverse and is not $\in (\integers / q \integers)^{\times}$.\autocite[19]{koblitz} 
\qed

Notice that for prime $p$, every number $< p$ is relatively prime to $p$, so the order (number of elements) of the group $(\integers / n \integers)^{\times}$ is $p-1$, which you might notice is the same as the order of $(\integers / n \integers)^{+}$. This fact will be useful in a bit.


\subsection{Discrete Logarithm Problem}

In this section, I want to explore the formal statement of 'why' certain operations are difficult to reverse, although this formal treatment gets quite abstract. 

In a Diffie-Hellman key exchange over $(\integers / q \integers)^{\times}$, Alice and Bob were mapping their secret keys $n$ through $f_g$,
\[ f_g(n) = g^n \bmod q \]
or, written in terms of their respective groups,
\[ f_g: \integers \rightarrow (\integers / q \integers)^{\times}, \]
As in, \textit{$f_g$ maps the integers to the integers $\bmod q$.}

This $f$ is a function between groups (a \textit{group homomorphism}) from $\integers$ \textit{onto} a \textit{\textbf{subset}} of $(\integers / q \integers)^{\times}$ surjectively, namely the subset generated by $g^n$ which I will denote $H$. The inverse mapping here (the 'computationally difficult' part), isn't defined for the entirety of the domain of $f$, since $f$ takes an infinite group $\integers$ to a subgroup $H$ of the finite group $(\integers / q \integers)^{\times}$, the subgroup generated by $g$ multiplied with itself.  

Roughly outlining the proof of the one-way operation's "difficulty," it can be shown that any finite abelian group must is made up of cyclic subgroups (cyclic groups being the integers under \textit{addition} mod $n$ for some $n \in \integers$), much like the elements of the periodic table forming chemical compounds.\footnote{By the (aptly named) Fundamental Theorem of Finitely Generated Abelian Groups. \\\autocite[134]{saracino}}
Hence, our subgroup $H$ \textit{must} be one of these cyclic subgroups.\autocite[43]{koblitz} We can then write this sort-of inverse map $f\inv$ as,

\[ \log_g : (\integers / q \integers)^{\times} \rightarrow H \]
or,
\[ \log_g : (\integers / q \integers)^{\times} \rightarrow (\integers / m \integers)^{+}. \]

Ascertaining this 'hidden' cyclic subgroup $H$ is known to be a difficult problem, and this difficulty of computing the original secret $n$ is immense since $\log_g$ does not map back to all the integers: just some additive group of the integers modulo some unknown $m$. This is known as the \textit{discrete logarithm problem}, a special case of the \textit{hidden subgroup problem}.\autocite[97]{koblitz} As discussed before with division, there is no known algorithm that can solve a discrete logarithm with time-complexity that scales polynomially (on a non-quantum computer). It remains an open question in theoretical computer-science whether such a polynomial-time algorithm exists, though most of modern cryptography rests on this principle.\autocite{lomont}


\section{Group Law on an Elliptic Curve}
\subsection{Definition of an Elliptic Curve}
In a complete turn of events (that will hopefully make sense in the end), I want to explain the notion of \textit{Elliptic Curves}. Elliptic curves are a family of  algebraic\footnote{Specifically a dimension one algebraic variety since it admits a group structure.} curves defined as the solution set of a polynomial equation. Namely, an elliptic curve is the set of solutions $(x,y)$ to an equation of the form:\autocite[10]{koblitz} \footnote{The general form, $y^3 + a_1xy + a_2y = x^3 + a_3x^2 + a_4x + a_5$, can always be transformed to the reduced form preserving the group structure iff the field $K$ is not $\field_2$ or $\field_3$.}
\[y^2 = x^3 + ax + b, \text{ for constants } a,b.\]
Importantly, the behavior of this curve is dependent on the 'field' on which one defines it. Field, in mathematics, refers to a structure where any two elements have a well-defined notion of addition, subtraction, multiplication and division (except by a 0 element). Notable examples include the rationals $\rationals$, the reals $\reals$, and the complex numbers $\complexes$. Not the integers since, take, for example: $1, 2 \in \integers$, but $\frac{1}{2} \notin \integers$. We will look at the case of the reals shortly, but this is an important distinction, hinting towards the possibility of a discrete context to come.

\begin{figure}[ht]
\begin{center}
\includegraphics[width=.9\linewidth]{elliptic_curves.png} 
\caption{A few selected elliptic curves plotted over the reals $\reals$ with matplotlib. In the form, $y^2 = x^3+ax+b$, with $a$ from $-3$ to $0$ and $b$ from  $-1$ to $2$.}
\label{fig:realECs}
\end{center}
\end{figure}

\subsection{Elliptic Curves over the Reals}

In Figure \ref{fig:realECs}, we see the general shape of an elliptic curve. This complicated shape arises from square rooting a general depressed cubic of the form $y=x^3+px+q$. Without the $x^2$ term, this cubic is guaranteed to have only one inflection point at $x=0$, since its second derivative $y'' = 6x$ does not depend on $p$ or $q$, and since square roots preserve the inflection points.
Furthermore, the square-rooting increases values from $0<y<1$ and decreases values when $y>1$ with a fixed point at $1$. Over $\reals$, square roots are limited to inputs greater than $0$, but since we take both branches $(\pm)$ of the root, we see reflection symmetry across the y-axis (this will be important in a moment).\autocite{haese} See Figure \ref{fig:cubicsqrt}.
\begin{figure}[ht]
\begin{center}
\includegraphics[width=.8\linewidth]{cubic_function.png} 
\caption{A depiction of how one branch of an elliptic curve arises from square-rooting a depressed cubic.}
\label{fig:cubicsqrt}
\end{center}
\end{figure}

\subsection{Geometric Secant-Tangent Construction}

It turns out, Elliptic curves are special because one can define a reasonable notion of addition with points on the curve. The one caveat is that we require a point 'at infinity' $I$ to do so. Formally, this means were working in the projective real plane $\mathbb{RP}^2$ or $\mathbb{R}^2 \cup \lbrace \infty \rbrace$. 
But with this, we obtain the property that any secant drawn through two points on the curve must intersect another third point on the curve or this point at infinity $I$. Thus we will define the addition of two points $P$ and $Q$ to be this third point reflected across the y-axis.\footnote{Note, without reflecting across the y-axis, this operation is not associative. It also makes sense since three colinear points sum to the point-at-infinity $A+B+C=I$ and hence, $A+B=-C$.}

\begin{figure}[ht]
\begin{center}
\includegraphics[width=.8\linewidth]{grouplaw.png} 
\caption{Point addition of two points $P$ and $Q$, defined by reflecting the third point of intersection across the y-axis, on $y^2 = x^3 -x+1$.}
\label{fig:additionEC}
\end{center}
\end{figure}

\subsection{Addition of Two Points}

We can make this idea rigorous by using some geometric tools. Our third point $-R$ is defined as the intersection of our elliptic curve $y^2 = x^3 + ax +b$ and some secant line $y=mx+l$. Given the points $P, Q = (x_p,y_p), (x_q,y_q)$ we can write down the slope:
\[m = \frac{y_p - y_q}{x_p-x_q}\]
Proceeding with the simultaneous equations
\begin{align}
y^2 &= x^3 + ax +b\\
y&=mx+l
\end{align}
Substituting (2) into (1),
\begin{flalign*}
(mx+l)^2 &= x^3 + ax +b\\
m^2x^2 + 2mlx + l^2 &= x^3 + ax +b \\
\Rightarrow 0 = x^3 - &(m^2)x - (2ml)x + (b-l^2) \tag 3
\end{flalign*}
Now, this cubic has three real solutions, namely the roots of P, Q and R respectively. Writing these as factors:
\[(x-x_p)(x-x_q)(x-x_r) = x^3 - (m^2)x^2 - (2ml)x + (b-l^2)\]
The next step is to expand the left side out and equate coefficients.
\begin{align*}
LH &= x^3 - \color{Purple}{(x_p+x_q+x_r)} \color{black}{x^2} +  (x_p x_q + x_px_r + x_qx_r) x  - x_px_qx_r\\
RH &= x^3\hspace*{1.6cm}  - \color{Purple}{(m^2)} \color{black}{x^2} \hspace*{2.4cm}  - (2ml) x  + (b-l^2). \text{\hspace*{1.2cm}}
\end{align*}
This means, using the purple coefficients,
\begin{align*}
m^2 &= x_p +x_q+x_r\\
\therefore \hspace*{0.3cm} x_r &= m^2 - x_p - x_q. \tag 4
\end{align*}
Substituting the x coordinate of $-R$, $x_r$ into the point-slope form of the line with $m = \frac{y_p - y_q}{x_p-x_q}$ we obtain,
\begin{align*}
y_r &= y_q + m(x_r-x_q)\\ 
&= y_p + m(x_r -x_p).
\end{align*}
Flipping our result across the y-axis to obtain $R$, we have (finally),\footnote{As long as $P \neq Q$ and $P \neq -Q$.}

\begin{align*}
P \; + \; Q \; &:= \; R\\
(x_p,y_p)+(x_q,y_q) &:= \left( m^2 -x_p-x_q,\;\  -y_q - m(x_r-x_q) \right),
\end{align*}
\begin{center}
where $m = \frac{y_p - y_q}{x_p-x_q}$.
\end{center}
\qed

\subsection{Inverse Points and Infinity}

In the case of adding two points opposite each other over the y-axis, one says they intersect the third point "at infinity." 
In general, over a projective plane, we revise the parallel postulate to say "any two parallel lines share one point of intersection, namely the point at infinity." We see this below; like train tracks meeting the horizon, the two parallel, vertical lines meet at $\infty$ or $I$. 

\begin{figure}[ht]
\begin{center}
\includegraphics[width=\linewidth]{3dplot.png} 
\caption{Parallel lines drawn through inverse points, all intersecting at point at infinity $I$ over $y^2=x^3 - x + 1$. As in, $P + (-P) = I = Q + (-Q)$.}
\label{fig:3dproj}
\end{center}
\end{figure}

Because of this construction, $I$ acts as a left- and right-sided identity element. Since, for any ($\reals$-rational) point $A$ with inverse $-A$ on the elliptic-curve,
\begin{align*}
  A + (-A) &= I\\
  A + (-A)\; \color{blue}{+ A} &= I \color{blue}{+ A}\\
  \Rightarrow \hspace*{0.3cm} A + I &= I + A = A \tag 5
\end{align*}


\subsection{Adding a Point to Itself}
The case that was left out of the earlier pictorial representation of point addition is when a point is added to itself. Not to fear, however, since we can replace the secant through two points with a tangent through one. The resultant point is the resultant intersection flipped across the y-axis. The slope of this tangent can be found through implicit differentiation.
\begin{align*}
\color{red}{d(}\color{black}{y^2}\color{red}{)} &= \color{red}{d(}\color{black}{x^3+ax+b}\color{red}{)}\\
2y\color{red}{dy} &= 3x^2\color{red}{dx} \color{black}\; { + \; a} \color{red}{dx}\\
\color{red}{\frac{dy}{dx}} &= \frac{3x^2 + a}{2y}.
\end{align*}
Thus with,
\[y_r-y_p = m(x_r-x_p)\]
\begin{center}
where $m = \frac{3x_p^2+a}{2y_p}$,
\end{center}
we can use the same result as before with $P=Q$:
\begin{align*}
m^2 &= x_p +x_q +x_r\\
\Rightarrow \hspace*{0.3cm} x_r &= m^2 - 2x_p \tag 6\\
\end{align*}
and, using the point-slope form and flipping across the y-axis, 
\begin{align*}
y_r = -y_p-m(x_r-x_p)
\end{align*}
\qed

*A word on notation: the choice to use $+$ to denote this binary operation is entirely arbitrary, and many authors use alternate notation to represent this ($\times, \oplus,\otimes,\star$ etc.). Using $+$ hints that adding a point $P$ to itself $n$ times might be written $nP$, but for sake of consistency with the theory to come, I will write this $P^n$ meaning $P+P+...+P$, $n$-times. This will make sense in a moment.

\section{Group structure of $E[K]$}

\subsection{Verifying the Group Axioms}

By the higher powers of mathematical serendipity, this forms a group! A very special group at that. We can write this elliptic curve group as $E[\reals]$ for the case in the reals. Or, $E[K]$ for any field $K$ (again, a structure with $+, -, \times, \div$).

	Now, we will (at least, heuristically) verify that the group axioms hold, we first see in eq (5) that we have a two-sided identity, $I$, given by the point at infinity. Hence,
\[ P + I = I + P = I \; \text{ for all } P \in E[K] \]
Next, we prove the existence of an inverse for every element by noticing that our curve is symmetric about the y-axis. Similarly our identity element $I$ is self-inverse. Hence,
\[ \text{for all } P \in E[K], \text{ there exists an inverse } -P \text{ such that } P + (-P) = I \]
This operation is associative as well, but unfortunately a rigorous proof of this fact is unprecedentedly untame, especially through this geometric depiction of elliptic curves. With more powerful tools from algebraic geometry, this proof is almost trivial, following nicely from  tracking values on points of a curve (namely $\mathrm{Div}^0(E)$) and the relationship between poles and zeros, as stated by the Riemann-Roch theorem.\autocite[66]{silverman}
Lastly, this binary operation of adding two points is \textit{commutative} as well, following geometrically from the secant construction or through the formulas.

As a result of meeting these conditions, $E[K]$ forms an abelian group under our binary operation.

\subsection{Finite Fields $\field_p$}

This elliptic curve group action holds for other fields $K$ as well. Most important to cryptography is elliptic curves over "finite" fields. 
A finite field, denoted $\field_p$ for $p$ prime,\footnote{Technically, $p$ can be a prime power. 
One might write $\field_q$ where $q = p^r$.} is a set of ordered pairs $(x,y)$ with addition, subtraction and multiplication taken \textit{modulo $p$}. 

As I alluded to earlier, the condition that $p$ be prime is so that every element $n < p$ has a multiplicative inverse, since, to have a multiplicative inverse, $\mathrm{gcd}(n,p)=1$. Really, finite fields are the elements of $\integers / p \integers$ with addition and multiplication in $(\integers / p \integers)^{+}$ and $(\integers / p \integers)^{\times}$. The field axioms readily follow from the group axioms of the multiplicative and additive groups.

\subsection{Elliptic Curves over Finite Fields, $K = \field_p$}

Using the same equations from before, except with operations taken \textit{modulo} $p$, this elliptic curve still forms a group over a finite field, $E[\field_p]$. The elements of this group are the points, 
\[ E[\field_p] = \left\lbrace (x,y)\ |\ y^2 \equiv x^3 + ax + b \bmod p \right\rbrace \cup \lbrace \infty \rbrace. \]
with the additional $\infty$ element serving as the identity.

Plotting examples of these groups over finite fields, we see the geometric intuition breaks down somewhat.
\begin{figure}[ht]
\centering
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width = \textwidth]{krationalpoints19.png}
\caption{$y^2 = x^3 + 15x + 1$ over $\field_{19}$}
\label{fig:left}
\end{subfigure}
\begin{subfigure}{0.49\textwidth}
\centering
\includegraphics[width = \textwidth]{krationalpoints23.png}
\caption{$y^2 = x^3 + 12x + 17$ over $\field_{23}$}
\label{fig:right}
\end{subfigure}
\caption{Select elliptic curves plotted over finite fields. Notice the symmetry about $\frac{p}{2}$.}
\label{fig:combined}
\end{figure}

In an attempt to better understand the group structure, I coded an interactive web-app in Typescript that computes the multiplication table of the group elements, known as a Cayley table. The symmetry about the diagonal indicates the commutativity as well.

\begin{figure}[ht]
\begin{center}
\includegraphics[width=\linewidth]{cayleytable.png} 
\caption{App on my \href{jacobbruner.com/elliptic-curve}{personal website} computing the Cayley table of $y^2 = x^3 + 3x + 12$ over $\field_{17}$. Clicking on an element computes the subgroup it generates, the focused point being $(5,10)$ here.}
\label{fig:cayley}
\end{center}
\end{figure}

Using this elliptic curve group, a new form of Diffie-Hellman can be formulated. Given a suitable generator point $g \in E[\field_p]$, all the repeated multiplications can be performed on this elliptic curve group. The benefit of doing this is that the structure of an elliptic curve group $E[\field_p]$ is much more complicated than that of $(\integers / q \integers)^{\times}$. The process is similar to before: examining the \textit{subgroup structure} of $E[\field_p]$ reveals the difficulty of uncovering the 'hidden subgroup' defined by the discrete logarithm. Simply put, when working in $(\integers / q \integers)^{\times}$, there are number-theoretical properties making it easier to narrow down guesses, especially when computing a discrete logarithm. Diem, C. (2011) showed that that the discrete logarithm problem for elliptic curves has an asymptotic time complexity greater than that of $(\integers / q \integers)^{\times}$.\autocite[76]{diem} The culmination of this research into elliptic curve cryptography is the fact that most public key protocols utilize elliptic curves in one way or another. 

\iffalse
\begin{figure}[ht]
\begin{center}
\includegraphics[width=\linewidth]{wikicert.png} 
\caption{Certificate information for wikipedia showing the use of elliptic curve cryptography.}
\label{fig:wiki}
\end{center}
\end{figure}
\fi

\section{Conclusion}

In this paper, I sought to explore \textbf{to what extent does group theory provide a mathematical backdrop for modern public-key cryptography?} From my findings, it's clear that group theory \textit{does} indeed provide a rich backdrop for discussing cryptographic concepts. Especially since, as computing power grows cheaper, the use of group-theoretical techniques to strengthen existing principles is paramount. For instance, the Diffie-Hellman protocol works on any abelian group. Further research is underway at examining other candidates for 'secure' groups, such as the study of hyperelliptic curves and other higher-genus abelian varieties (a solution set to a polynomial forming an abelian group).

In the process of researching, it's clear that there are two different mathematical perspectives introducing elliptic curves. The decision was made to continue with the simpler route, defining the elliptic curve as the solution to a polynomial equation. However, this is not strictly necessary, since elliptic curves arise in many other contexts, like through the intersection of two quadric surfaces (like a sphere and an hyperboloid for instance). The other route is a more theoretical perspective, using tools from algebraic geometry and topology to reach the same conclusions. The benefit of this advanced approach is that tools can be \textit{generalized} to reveal new perspectives. Doing so also would decrease the 'arbitrary-ness' of some of the topics explored in this paper. Coming at a topic from the top-down can make certain difficult proofs and perspectives trivial, as I mention a couple times in the paper.

Another limitation of this paper is the imprecise comparison between elliptic curve cryptography and traditional cryptography. Going into it, I intended to explore the nitty-gritty details of the elliptic curve group structure, detailing exactly why the hidden-subgroup problem and discrete logarithm problem were more difficult. This proved to be much more challenging than anticipated, and, although I satisfied some of my own curiosity, I realized it would be an impractical undertaking to convey the wealth of prerequisites to reach the conclusions I wanted. As a result, my research lacks the 'point' I wanted it to have, rather opting for a more expository lens on this complicated subject. Regardless, I find this subject fruitful to learn because of its approachability and its underappreciated influence on modern-day life.


\newpage 

\printbibliography

\end{document}
